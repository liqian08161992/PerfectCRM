"""
git初识：
1，git是什么？git是一个帮助用户版本控制的软件，
2，git和github，没有关系
3，早期都是使用svn，现在基本都是使用git来做，
4，git每一个版本不是完全复制的，而且只是记录改动的部分，这样可以节省空间，

git还是应该应该使用一个故事场景来学习，这样更加的印象深刻，否则全是理论就容易忘记
你写了代码，怎么使用git把代码管理起来？
1，要下载一个Windows版本，进入git官网下载
2，然后进入项目的根目录，右键，点击git bash here，还有git gui，不使用桌面版，都是用命令，
3，执行命令：git init，这样就是让git帮你管理起来这个文件夹了，会在项目的根目录创建一个.git文件夹，
以后当前的版本都会保存到这个git文件里面去，
4，执行命令：git status，会出现红色的文件夹，这意味着，这些文件夹还没有被git管理起来，
5，执行命令：git add manage.py ，会发现这个manage.py文件被管理了，
现在你再去git status，其他文件夹还是红色的还没有管理，manage.py文件已经不是红色了，
执行命令：git add .   ,这就是管理所有的文件，就会全变绿了，

执行命令：git commit -m '创建第一个版本'，这就是提交了，后面是版本的提交注释，这是复制了一份到git文件夹里面了，
执行命令：git config --global user.email "1910583523@qq.com"
执行命令：git config --global user.name "andy"，第一次提交，这是告诉git，是谁提交的，方便追溯，
执行命令：git status，这个时候就没有东西了，就是都提交了，都把文件管理起来了，
修改文件，执行命令，git status，就会发现这个文件变红了，这是因为文件变动了，
执行命令：git add . ，
执行命令：git commit -m '创建第二个版本'，必须要执行这两个命令，然后就会发现这个文件都管理了，git status 就没有文件了，
执行命令：git log，就会把所有的提交日志显示出来，会有commit id，还有提交人和邮箱，时间，提交注释，
假设现在上线了，然后发现第二次提交的内容没有审核通过，就需要回滚，
执行命令：git reset --hard 需要回滚的版本号，这样就回滚了，
假设现在发现第二次提交的内容审核通过了，就可以把第二次的提交了，
执行命令：git reflog，这是查看所有的版本，
执行命令：git reset --hard 需要回滚的版本号，这样就再次回滚到了第二个版本了，
如果是修改了之后还没有git add，git status，这个时候文件是红色的了，但是我现在想要取消这个修改，
执行命令， git checkout 文件名 ，这就是取消修改了，


"""